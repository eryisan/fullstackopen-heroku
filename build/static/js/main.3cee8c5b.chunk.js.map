{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","components/LoginForm.js","components/NoteForm.js","components/Togglable.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","type","value","name","onChange","NoteForm","createNote","useState","newNote","setNewNote","event","preventDefault","Math","random","target","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","noteFormRef","useRef","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","notesToShow","filter","handleLogin","loginService","setItem","stringify","setTimeout","removeItem","noteObject","current","returnedNote","concat","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cee8c5b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('')\n  \n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    createNote({\n      content: newNote,\n      important: Math.random() > 0.5\n    })\n\n    setNewNote('')\n  }\n\n  return (\n    <div>\n      <h2>Create a new note</h2>\n\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default NoteForm\n","import React, { useState, forwardRef, useImperativeHandle } from 'react'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n         <button onClick={toggleVisibility}>cancel</button> \n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { \r\n  getAll, create, update, setToken\r\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport Togglable from './components/Togglable'\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const noteFormRef = useRef()\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n          setNotes(notes.concat(returnedNote))\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedNoteappUser')\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n      <Togglable buttonLabel='login'>\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable> :\n      <div>\n        <p>{user.name} logged-in</p>\n        <button onClick={handleLogout}>log out</button>\n        <Togglable buttonLabel='new note' ref={noteFormRef}>\n          <NoteForm createNote={addNote} />\n        </Togglable>\n      </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}